<template>
	<view v-if="ShowPage">
		<view class="box1">
			<text class="text1"> 方向:   {{nList1.endName}}</text>
			<view class="butter"><text class="shoumo">首末时间</text></view>
			<view class="text2">
				<text style="font-size: 30rpx;">{{nList1.firstLastTime}}</text>
			</view>
			<view class="butter2"><text class="piaojia">票价</text></view>
			<view class="text3">
			<text style="font-size: 30rpx;">1元</text>
			</view>
		</view>
			<map id='map' ref="map" class="map" :style="{height:mapHeight}" :scale="scale" :longitude="startlongitude" :latitude="startlatitude"
			 :show-location="false" :controls="controls" :markers="markers" :polyline="polyline" @controltap="controltap" >
			</map>
		<!-- 底部操作 -->
		<view style="width: 690rpx;background-color: #ffffff;margin-left: 32upx;border-radius: 11rpx;margin-top: 32upx;height: 96upx;flex-wrap: nowrap;flex-direction: row;position: fixed;bottom: 130rpx;">
			<view style=" flex-wrap: nowrap;flex-direction: row;width: 345rpx;justify-content:center;margin-top: 34rpx;" >
				<image style="width: 37upx;height: 28upx" src="../../static/GCJX/detailedBus/exchange.png"></image>
				<text style="font-size: 30rpx;">换向</text>
			</view>
			<view style=" flex-wrap: nowrap;flex-direction: row;width: 345rpx;justify-content:center;margin-top: 34rpx;" @click="controlPopup">
				<image style="width: 37upx;height: 25upx" src="../../static/GCJX/detailedBus/zhanpai.png"></image>
				<text style="font-size: 30rpx;">站牌</text>
			</view>
		</view>
		<view>
		<!-- 嵌套弹窗 -->
		<uni-popup ref="bottomPopup" type="bottom">
			<!-- 弹窗背景 -->
			<view style="background-color: #F5F5F5;">
				<!-- 到达信息 -->
			<view style="width: 690rpx;background-color: #ffffff;border-radius: 11rpx;margin-left: 32rpx;padding-top: 42rpx;padding-bottom: 42rpx;margin-top: 32rpx;height: 200rpx;">
				<view v-if="carSta!=='等待发车'" style="text-align: center;">
			            <text  style="color: #FF7D43;font-size: 30rpx;text-align: center;">预计到达</text>
						<text  style="color: #FF7D43;font-size: 30rpx;top: 42rpx;margin-bottom: 42rpx;text-align: center;">{{carSta}}站 {{arriveTime}}分 {{carDistance}}米</text>
						
						</view>
						<view v-if="carSta=='等待发车'" style="text-align: center;">
						        <text style="color: #FF7D43;font-size: 30rpx;text-align: center;margin-top: 35upx;">等待发车</text>
								</view>
						<!-- <view style="width: 345rpx;position: absolute;right: 32rpx;"> 
						        <text style="color: #FF7D43;font-size: 30rpx;text-align: center;">预计到达</text>
								<text style="color: #FF7D43;font-size: 30rpx;top: 42rpx;margin-bottom: 42rpx;text-align: center;">{{nList1.carSta}}站 {{nList1.distance}}米</text>
						</view>	 -->
					</view>
					<!-- 公交动态信息横向列表 -->
					<view style="width: 690rpx;background-color: #ffffff;margin-left: 32upx;border-radius: 11rpx;margin-top: 32upx;height: 600upx;">
							<scroll-view :show-scrollbar="false" scroll-x="true" style="height: 600upx;" >
								<image style="width: 36upx;height: 36rpx;margin-top: 76rpx;margin-left: 43rpx;"  src="../../static/GCJX/detailedBus/star.png"></image> 
										<!-- 循环前判断公交方向 -->
										<view style=" flex-wrap: nowrap;flex-direction: row;position: absolute;left: 37px;height: 600upx;direction:ltr">  <!-- top: 88rpx; -->
										<block v-for="(item,index) in list1" :key="index">
											
												<!-- <text v-if="item1.stationIndex==index+1">{{item1.stationIndex}}{{index+1}}</text> -->
								<!-- 公交	 -->	<image  v-for="(item1,index1) in carList" :key="index1" v-if="item1.stationIndex==index+1&&direction==0" style="height: 27rpx;width: 54rpx;top: 40rpx;position: absolute;flex: block;" src="../../static/GCJX/detailedBus/bus.png"></image>
								                    <!-- 公交	 -->	<image  v-for="(item1,index1) in carList" :key="index1" v-if="item1.stationIndex-list1.length==index+1&&direction==1" style="height: 27rpx;width: 54rpx;top: 40rpx;position: absolute;flex: block;" src="../../static/GCJX/detailedBus/bus.png"></image>
								            
											<view style="flex-wrap: nowrap;flex-direction: row;top: 88rpx;direction:ltr">
								<!-- 绿条 -->		<image style="width: 107upx;height: 14upx;" src="../../static/GCJX/detailedBus/green.png"></image>
								<!-- 橙条	 -->	<!-- <image v-if="item.stationStatu==1&&index!=realtimeDynamic.length-1" style="width: 107upx;height: 14upx;" src="../../static/GCJX/detailedBus/orange.png"></image> -->
								<!-- 红条 -->		<!-- <image v-if="item.stationStatu==2&&index!=realtimeDynamic.length-1" style="width: 107upx;height: 14upx;" src="../../static/GCJX/detailedBus/red.png"></image> -->
								<!-- 箭头 -->		<image v-if="index!=0" style="height: 13rpx;width: 17rpx;position: absolute;"  src="../../static/GCJX/detailedBus/arrowHead.png"></image>
								</view>
								<!-- 序号 -->		<text  :class="item.stationName==inStation?'xuhao2':'xuhao'">{{index+1}}</text>
								<!-- 站点	 -->    <text  :class="item.stationName==inStation?'text5':'text4'" v-if="direction==0" @click="getCarDetaile(item.stationIndex,item.lat,item.lon)">{{item.stationName}}</text>
								<!-- 站点	 -->    <text  :class="item.stationName==inStation?'text5':'text4'" v-if="direction==1" @click="getCarDetaile(item.stationIndex-list1.length,item.lat,item.lon)">{{item.stationName}}</text>
										</block>
										<block>
											<!-- <view style=""> -->
											<!-- 终点	 -->	<image  style="width: 36upx;height: 36upx;top: 78rpx;margin-right: 43rpx;" src="../../static/GCJX/detailedBus/end.png"></image>
											<!-- </view> -->
										</block>
										</view>
								</scroll-view>
				</view>
				<!-- 底部操作 -->
				<view style="width: 690rpx;background-color: #ffffff;margin-left: 32upx;border-radius: 11rpx;margin-top: 32upx;height: 96upx;flex-wrap: nowrap;flex-direction: row;">
					<view style=" flex-wrap: nowrap;flex-direction: row;width: 345rpx;justify-content:center;margin-top: 34rpx;" @click="exchange">
						<image style="width: 37upx;height: 28upx" src="../../static/GCJX/detailedBus/exchange.png"></image>
						<text style="font-size: 30rpx;">换向</text>
					</view>
					<view style=" flex-wrap: nowrap;flex-direction: row;width: 345rpx;justify-content:center;margin-top: 34rpx;" @click="controlPopup">
						<image style="width: 28rpx;height: 28rpx;" src="../../static/GCJX/detailedBus/loction.png"></image>
						<text style="font-size: 30rpx;">地图</text>
					</view>
				</view>
				</view>
			</uni-popup>
		</view>
		</view>
</template>

<script> 
	// import taxi from '../../common/Czc.js'
	import uniPopup from "@/components/GJCX/uni-popup/uni-popup3.vue";
	import gjcx from "../../common/Gjcx.js";
	
	export default {
		components: {
			//加载多方弹框组件
			uniPopup,
			
		},
		data() {
			return {
				Encryption: "XMJDTzzbusxmjdt", //接口校验码
				// distance:9999999999,
				stationIndex:0,
				inStationIndex:0,
				inStationIndexlat:0,
				inStationIndexlon:0,
				carDistance:'',
				inStation:'',
				carSta:999,
				nList1:[],
				polyline: [],
				points:[],
				polyline2: [],
				polylineArr:[],
				points2:[],
				lineList:[],
				startlatitude: 25.1,
				startlongitude: 118,
				endtlatitude: 25.33,
				endlongitude: 118,
				nearStastion:99999,
				arriveTime:'',
				direction:0,
				list:'',      //线路接口
				list1:[],
				list2:[],
				carList:[],
				forwardDirection:[],
				reverseDirection:[],
				reverseCar:[],
				forwardCar:[],
				forwardLine:[],
				reverseLine:[],
				carList1:[],
				longitude: "", //精度
				latitude: "", //纬度
				key: [],
				scale: 16,
				scale1:16,
				ShowPage:false,
				mapHeight: '',
				mapWidth:'319px',
				popupStatu:0, //弹窗状态
				controls: [{
						id: 'back',
						position: {
							left: 10,
							top: 445,
							width: 55,
							height: 55
						},
						iconPath: '../../static/Home/Position.png',
						clickable: true,
					},
					/* 			{
									id: 'CallPollice',
									position: {
										left: 300,
										top: 290,
										width: 55,
										height: 55
									},
									iconPath: '../../static/Home/CallPollice.png',
									clickable: true,
								}, */
				],
				markers: [],
				stationMarkers:[],
				startmarker: [],
				endmarker: [],
			}
		},
		mounted() {
			
		},
		async onLoad(options) {
			var that=this;
			that.nList1 = JSON.parse(options.nList);//解析得到集合
			that.inStation=options.nearstaion1;
			// console.log(that.inStation);
			// console.log(options.nearstaion1);
			await that.lineDetaile();
			await that.carInfo();
			that.getNearstation();  //获取最近站点
			that.getGaoDeKey();
			that.getMyLocation();
			uni.getSystemInfo({
				success: function(res) {
					if (res.screenWidth < 350) {
						//回到我的位置
						that.controls[0].position.top = 315;
						that.controls[0].position.left = 250;
						//-
						that.controls[1].position.left = 250;
						that.controls[1].position.top = 260;
						//+
						that.controls[2].position.left = 250;
						that.controls[2].position.top = 315;
					}
				}
			});
			// that.setMarkers();
			that.ShowPage=true
			
		},
		onShow() {
			var that=this;
			//that.$refs['bottomPopup'].open();
		},
		onReady() {
			var that = this;
		//that.$refs['bottomPopup'].open();
			that.mapContext = uni.createMapContext("map", this);
			uni.getSystemInfo({
				//设置地图高度为可使用的高度 
				success: function(res) {
					that.mapHeight = (res.windowHeight -78) + 'px';
				}
			});
			// if(this.timer){
			// 	clearInterval(this.timer);
			// }
			// else{
			// 	this.timer =setInterval(()=>{
					
			// 		console.log('ok!!!!');
			// 		that.carInfo();         //车辆实时动态
			// 		// that.getNearstation();
			// 		that.getCarDetaile(that.inStationIndex,that.inStationIndexlat,that.inStationIndexlon);  //获取最近站点
			// 		// that.setCarmarkers()
			// 	},5000);
			// }
		},
		methods: {
			getGaoDeKey: function() {
				//获取高德key
				var that = this;
				that.key = gjcx.GaoDeWebKey;
			},
			getMyLocation: function() {
				//获取我的位置，将地图中心点移动至此
				var that = this;
				var ojb = {
					type: 'gcj02',
					geocode: true,
					success: function(res) {
						that.longitude = res.longitude;
						that.latitude = res.latitude;
					},
					fail: function() {

					},
				}
				uni.getLocation(ojb);
			},
			//地图控件调用方法
			controltap: function(e) {
				var that = this;
				var controlId = ''
				// #ifdef APP-PLUS
				controlId = e.detail.controlId;
				// #endif
				// #ifdef MP-WEIXIN
				controlId = e.controlId;
				// #endif

				if (controlId === 'back') {
					//回到我的位置
					that.mapContext.moveToLocation();
				} else if (controlId === 'Big') {
					//放大
					if (that.scale < 18) {
						that.scale = that.scale + 1;
					}
				} else if (controlId === 'Small') {
					//缩小
					if (that.scale > 5) {
						that.scale = that.scale - 1;
					}
				}
			},
			//路由统一事件
			godetail: function(url) {
				uni.navigateTo({
					url: url
				});
			},
			controlPopup: function(){
				var that=this;
				
				if(that.popupStatu==0){
					that.$refs['bottomPopup'].close();
					that.popupStatu=1;
					if(that.polylineArr=='抱歉！未获取到该线路轨迹信息'){
						uni.showToast({
							title:'抱歉！该线路暂无轨迹信息',
							icon:'none'
						})
					}
				}
				else{
					that.$refs['bottomPopup'].open();
					that.popupStatu=0;
			
				}
				
			},
			regionchange:function(){
				var that=this;
				// console.log(that.scale);
				                uni.createMapContext("map").getScale({  
				                    success: (e) => {  
										that.scale1=JSON.stringify(e.scale);
				                        console.log(JSON.stringify(that.scale1))  
				                    }  
				                }) 
			},
			exchange:function(){
				var that=this;
				if(that.direction==0){
				that.direction =1;
				that.list1=that.reverseDirection;
				that.carList=that.reverseCar;
				// console.log(JSON.stringify(that.carList));
				that.getNearstation();
				}
				else{
					that.direction =0;
					that.list1=that.forwardDirection;
					that.carList=that.forwardCar; 
					// console.log(JSON.stringify(that.carList));
					that.getNearstation();
				}
			},
			async getNearstation(){            //获取该线路最近站点
			var that = this;
			var s=0;
			var b=0;
			var lat;
			var lon;
			await that.getDistance();
			//console.log(b,lat,lon);
				
			},
			getDistance:function(){
				var that = this;
				return new Promise((resolve, reject) => {
				
				var s=0;
				var b=0;
				var lat;
				var lon;
				uni.getLocation({
					type: 'wgs84',
					success: function(res) {
						var myLocation=res.longitude +','+res.latitude;
						that.nearStastion=99999;
						// console.log(myLocation);
						//console.log(JSON.stringify(that.list1));
						 for(let i in that.list1){
							s=that.distance(res.latitude,res.longitude,that.list1[i].lat,that.list1[i].lon);
							 // console.log(s);
							 if(that.nearStastion>s){
								 
								 that.nearStastion=s;
								 that.inStation=that.list1[i].stationName;
								 b=that.list1[i].stationIndex;
								 // console.log(b);
								 lat=that.list1[i].lat;
								 lon=that.list1[i].lon;
							 }
							 //console.log(that.inStation,b,lat,lon);
							 
						}
						resolve('suc');
						if(that.direction==0){
						that.getCarDetaile(b,lat,lon);
						console.log(b,lat,lon);
						that.$refs['bottomPopup'].open();
						}
						if(that.direction==1){
						 that.getCarDetaile(b-that.list1.length,lat,lon);
						console.log(b-that.list1.length);
						that.$refs['bottomPopup'].open();
						
						}
					}
				});
				});
			},
			//计算车辆状态
			getCarDetaile:function(stationIndex,lat,lon){
				//console.log(stationIndex,lat,lon);
				var that=this;
				var s=0;
				that.inStationIndex=stationIndex;
				that.inStationIndexlon=that.list1[stationIndex-1].lon;
				that.inStationIndexlat=that.list1[stationIndex-1].lat;
				that.carSta=999;
				console.log(that.carList.length);
				that.inStation=that.list1[stationIndex-1].stationName;
				// console.log(stationIndex,lat,lon);
				// console.log(JSON.stringify(that.carList));
				if(that.carList.length>0){                                //判断是否有车
				    for(let i in that.carList){
						// console.log(stationIndex,that.carList[i].stationIndex,stationIndex>that.carList[i].stationIndex)
						// if(stationIndex>that.carList[i].stationIndex){
							s=stationIndex-that.carList[i].stationIndex;
							console.log(that.carList[i].stationIndex);
							if(that.direction==1){
								s=stationIndex-(that.carList[i].stationIndex-that.list1.length);
							}
							if(s<1&&s>0||s==0){
								that.carSta='即将到';
								that.carDistance=that.distance(lat,lon,that.carList[i].lat,that.carList[i].lon)*1000;
								break;
							}
							if(s<that.carSta&&s>0){
								that.carSta=s;
								that.carDistance=that.distance(lat,lon,that.carList[i].lat,that.carList[i].lon)*1000;
							}
							if(s<0){
								if(that.carSta<stationIndex){
									break;
								}
								else{
								s=-s;
								that.carSta='已过'+ s;
								that.carDistance=that.distance(lat,lon,that.carList[i].lat,that.carList[i].lon)*1000;
								break;
								}
							}
						// }
						// else{
						// 	that.carSta='等待发车';
						// 	break;
						// }
					}
				}
				else{
					that.carSta='等待发车';
					
				}
				console.log(that.carSta);
			},
			//计算距离公式
			distance: function (la1, lo1, la2, lo2) {
				var that=this;
			    var La1 = la1 * Math.PI / 180.0;
			    var La2 = la2 * Math.PI / 180.0;
			    var La3 = La1 - La2;
			    var Lb3 = lo1 * Math.PI / 180.0 - lo2 * Math.PI / 180.0;
			    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(La3 / 2), 2) + Math.cos(La1) * Math.cos(La2) * Math.pow(Math.sin(Lb3 / 2), 2)));
			    s = s * 6378.137;
			    s = Math.round(s * 10000) / 10000;
			    s = s.toFixed(2);
				that.arriveTime=Math.ceil((s*1000)/400);
			    return s;
			},
			carInfo:function(){
				var that=this;
				return new Promise((resolve, reject) => {
				
				uni.request({
					url:gjcx.InterfaceAddress[3],           //车辆实时到站信息
					// method:'POST',
					header:{'content-type':'application/x-www-form-urlencoded'},
					data:{
						lineID:that.nList1.lineID,
						direction:0,
						Encryption:that.Encryption,
					},
					success:function(res){
						// console.log(res);
						that.setCarmarkers(res.data);
						that.carList=JSON.parse(JSON.stringify(res.data));
						that.forwardCar=res.data;
						// console.log(that.carList);
						resolve('suc');
					},
					fail:function(info){
						console.log(info);
					}
				});
				uni.request({
					url:gjcx.InterfaceAddress[3],           //车辆实时到站信息
					// method:'POST',
					header:{'content-type':'application/x-www-form-urlencoded'},
					data:{
						lineID:that.nList1.lineID,
						direction:1,
						Encryption:that.Encryption,
					},
					success:function(res){
						that.carList1=res.data;
						that.reverseCar=res.data;
						// console.log(that.reverseCar);
						// console.log(res);
					},
					
				});
				});
			},
			lineDetaile:function(){
				var that=this;
				return new Promise((resolve, reject) => {
				
				uni.request({
					url:gjcx.InterfaceAddress[6],             //获取线路轨迹
					// method:'POST',
					header:{'content-type':'application/x-www-form-urlencoded'},
					data:{
						lineID:that.nList1.lineID,
						direction:0,
						Encryption:that.Encryption,
					},
					success:function(res){
						
						that.points = [];
						that.polyline = [];
						that.polylineArr=res.data;
						var polylineArr = [];
						var points = [];
						that.polylineArr = res.data;
						//根据文件建设对象经纬度数组
						for (var i = 0; i < polylineArr.length; i++) {
							// var arr = points[i].split(',');
							var obj = {
								longitude: polylineArr[i].lon,
								latitude: polylineArr[i].lat
							}
							that.points.push(obj);
						};
						var obj = {
							points: that.points,
							width: 10,
							arrowLine: true,
							// arrowIconPath:'../../static/CZC/jiantou.png',
							color: "#4BDC27",
							borderColor: "#8c918b",
							// arrowIconPath:
						};
						that.polyline.push(obj);

					}
				});

				uni.request({
					url:gjcx.InterfaceAddress[2],             //获取线路详细信息
					// method:'POST',
					header:{'content-type':'application/x-www-form-urlencoded'},
					data:{
						lineID:that.nList1.lineID,
						direction:0,
						Encryption:that.Encryption,
					},
					success:function(res){
						that.list1=JSON.parse(JSON.stringify(res.data));
						// console.log(that.list1)
						that.forwardDirection=res.data;
						that.startlongitude=that.list1[0].lon;
						that.startlatitude=that.list1[0].lat;
						
						that.setMarkers(that.list1);
						// console.log(that.startlongitude,that.startlatitude);
						
					}
				});
				uni.request({
					url:gjcx.InterfaceAddress[2],      //获取线路详细信息
					// method:'POST',
					header:{'content-type':'application/x-www-form-urlencoded'},
					data:{
						lineID:that.nList1.lineID,
						direction:1,
						Encryption:that.Encryption,
					},
					success:function(res){
						that.reverseDirection=res.data;
						that.list2=res.data;
						resolve('suc');
					}
				});
              });
			},
			// carNum:function(stationIndex,index){
			// 	if(stationIndex==index+1){
					
			// 	}
			// },
			
			setCarmarkers:function(car){
				var that=this;
				// that.markers =that.stationMarkers;
				that.markers =[];
				//console.log(that.markers);
				
				// console.log(JSON.stringify(car));
				// for(let i in car){
				// console.log(Array.isArray(car));
				// if(car.length>0){
					
				// 	console.log(JSON.stringify(that.markers));
					for(var i=0;i<car.length;i++){
						// that.markers = [];
						// console.log(car[0].lat,car[0].lon);
									 var ob={
									 	id: that.stationMarkers.length-1+i,
									 	latitude: car[i].lat,
									 	longitude: car[i].lon,
									 	// title: '在这上车',
									 	zIndex: '1',
									 	iconPath: '../../static/GCJX/detailedBus/bus2.png',
									 	rotate: 0,
									 	width: 25,
									 	height: 25,
									 	// anchor: {
									 	// 	x: 0.5,
									 	// 	y: 1
									 	// },
									 	// callout: {
									 	// 	content: '我是公交车',
									 	// 	color: '#ff0000',
									 	// 	fontSize: 10,
									 	// 	borderRadius: 4,
									 	// 	borderWidth: 1,
									 	// 	borderColor: '#333300',
									 	// 	bgColor: '#FFFFFF',
									 	// 	padding: '5',
									 	// 	display: 'ALWAYS'
									 	// }
									 };
									 that.markers.push(ob);
									 
									 // that.markers.push(that.stationMarkers);
									 }
									 // console.log(JSON.stringify(that.markers));
									 for(let j in that.stationMarkers){
										 that.markers.push(that.stationMarkers[j]);
									 }
									 
									 // console.log(that.markers);
				// }
				// }
			},
			setMarkers: function(lis) { //设置始末标点
			
				var that = this;
				uni.createMapContext("map").getScale({
				    success: (e) => {  
						that.scale1=JSON.stringify(e.scale);
				        // console.log(JSON.stringify(that.scale1));
				    }  
				}) 
				// console.log(lis);
				that.stationMarkers = [];
				 var startmarker = { //起点
				 	id: 0,
				 	latitude: lis[0].lat,
				 	longitude: lis[0].lon,
				 	title: '在这上车',
				 	zIndex: '1',
				 	iconPath: '../../static/CZC/Start.png',
				 	rotate: 0,
				 	width: 35,
				 	height: 35,
				 	anchor: {
				 		x: 0.5,
				 		y: 1
				 	},
				 	callout: {
				 		content: lis[0].stationName,
				 		color: '#000000',
				 		fontSize: 10,
				 		borderRadius: 4,
				 		borderWidth: 1,
				 		borderColor: '#333300',
				 		bgColor: '#FFFFFF',
				 		padding: '5',
				 		display: 'ALWAYS'
				 	}
				 };
				 var endmarker = { //终点
				 	id: 0,
				 	latitude: lis[lis.length-1].lat,
				 	longitude: lis[lis.length-1].lon,
				 	title: '在这上车',
				 	zIndex: '1',
				 	iconPath: '../../static/CZC/End.png',
				 	rotate: 0,
				 	width: 35,
				 	height: 35,
				 	anchor: {
				 		x: 0.5,
				 		y: 1
				 	},
				 	callout: {
				 		content: lis[lis.length-1].stationName,
				 		color: '#000000',
				 		fontSize: 10,
				 		borderRadius: 4,
				 		borderWidth: 1,
				 		borderColor: '#333300',
				 		bgColor: '#FFFFFF',
				 		padding: '5',
				 		display: 'ALWAYS'
				 	}
				 };
				 that.stationMarkers.push(startmarker);
				 that.stationMarkers.push(endmarker);
				 // if(that.scale1>13){
				for(var i=1;i<lis.length-1;i++){
					var obj={
						id: i,
						latitude: lis[i].lat,
						longitude: lis[i].lon,
						// title: '在这上车',
						zIndex: '1',
						iconPath: '../../static/GCJX/detailedBus/station.png',
						rotate: 0,
						width: 10,
						height: 10,
						// anchor: {
						// 	x: 0.5,
						// 	y: 1
						// },
						callout: {
							content: lis[i].stationName,
							color: '#000000',
							fontSize: 8,
							borderRadius: 4,
							borderWidth: 1,
							borderColor: '#333300',
							bgColor: '#FFFFFF',
							padding: '5',
							display: 'ALWAYS'
						}
					};
					that.stationMarkers.push(obj);
				};
				// console.log(that.stationMarkers);

			},
		}
	}
</script>



<style>
	.map {
		width: 750rpx;
		
	}
	.box1{
		  background-color: #FFFFFF;
		  height: 160rpx;
		  position: relative;
		  
		  /* z-index: 999; */
		  /* position: fixed; */
	}
	.text1{
		margin-top: 5rpx;
		  font-size: 32rpx;
		  margin-left: 33rpx;
	  }
	  
	  .butter {
	  	width: 136rpx;
	  	height: 48rpx;
	  margin-left: 32rpx;
		margin-top: 32rpx;
	  	background-color: #01b5fd;
		border-radius: 10rpx;
	  }
	  .shoumo{
		  font-size: 26rpx;
		  top: 12rpx;
		  text-align: center;
	      color: #FFFFFF;
	  }
	  .piaojia{
		  font-size: 26rpx;
		  color: #FFFFFF;
		  text-align: center;
		  top: 12rpx;
	  }
	  .butter2 {
	  	width: 136rpx;
	  	height: 48rpx;
	  position: absolute;
		top: 70rpx;
		right: 216rpx;
	  	background-color: #01b5fd;
	  	color: #FFFFFF;
	  	font-size: 26rpx;
	  	text-align: center;
	  	line-height: 50rpx;
	  		border-radius: 10rpx;
	  }
	  .text2{
		  position: absolute;
	    top:73rpx;
		  left: 188rpx;
	  }
	  .text3{
	  	  position: absolute;
		  right: 127rpx;
	      top:73rpx;
	  	  font-size: 30rpx;
	  }
	  .text4{
		  position: absolute;
		  font-size: 28rpx;
		  top: 165rpx;
		  font-weight: 400;
		  width: 20px;
	  }
	  .text5{
		  position: absolute;
		  font-size: 28rpx;
		  top: 165rpx;
		  font-weight: 400;
		  width: 20px;
		  color: #FF7D43;
	  }
	  .xuhao{
		  position: absolute;
		  font-size: 28rpx;
		  top: 128rpx;
		  font-weight: 400;
	  }
	  .xuhao2{
		  position: absolute;
		  font-size: 28rpx;
		  top: 128rpx;
		  font-weight: 400;
		  color: #FF7D43;
	  }

</style>
