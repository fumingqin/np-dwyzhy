var XZY = {
    NoData: '没有找到符合的数据！',
    date: [],
    city: '泰宁',//泉州  尤溪
    citycode: "taining",//quanzhou  sanming
    localPosition:'',
    data: [],
    linearrow: 'M500 0c-276.1563 0-500 223.8438-500 500s223.8438 500 500 500 500-223.8438 500-500-223.8438-500-500-500zM500 906.25c-224.375 0-406.25-181.875-406.25-406.25s181.875-406.25 406.25-406.25 406.25 181.875 406.25 406.25-181.875 406.25-406.25 406.25zM794.1875 455.8125l-250-250c-24.4063-24.4063-63.9688-24.4063-88.375 0s-24.4063 63.9688 0 88.375l143.3125 143.3125h-349.125c-34.5313 0-62.5 27.9688-62.5 62.5s27.9688 62.5 62.5 62.5h349.125l-143.3125 143.3125c-24.4063 24.4063-24.4063 63.9688 0 88.4063 12.2188 12.1875 28.1875 18.3125 44.1875 18.3125s32-6.0938 44.1875-18.3125l250-250c24.4063-24.4063 24.4063-63.9688 0-88.375z',
    gongjiaosvg: 'M128 724.224c0 42.432 19.2 80.192 48 103.744l0 84.864C176 941.12 195.2 960 224 960l48 0C300.8 960 320 941.12 320 912.832l0-47.168 384 0 0 47.168C704 941.12 723.2 960 752 960l48 0c28.8 0 48-18.88 48-47.168l0-84.864C876.8 804.352 896 766.656 896 724.224L896 252.608C896 87.552 723.2 64 512 64 300.8 64 128 87.552 128 252.608L128 724.224zM296 771.392c-38.4 0-72-33.024-72-70.72 0-37.696 33.6-70.72 72-70.72 38.4 0 72 33.024 72 70.72C368 738.368 334.4 771.392 296 771.392zM728 771.392c-38.4 0-72-33.024-72-70.72 0-37.696 33.6-70.72 72-70.72s72 33.024 72 70.72C800 738.368 766.4 771.392 728 771.392zM800 488.448l-576 0L224 252.608l576 0L800 488.448z',
    startPosition: 'M842.222445 333.193615c-9.5454-85.915765-84.418668-177.534416-159.627581-218.972177-83.917248-46.24116-228.696656-51.163263-320.79012-0.511653-68.00279 37.401842-147.344836 108.971877-164.228365 234.8324-13.08604 97.549733 13.153578 191.397145 67.535139 256.3249 55.417147 66.175165 57.707306 61.989843 116.03269 123.380028 58.325383 61.396325 145.488559 220.432435 145.488559 220.432435s90.462315-167.075203 130.36921-211.586976 72.692602-71.117734 133.037992-150.646022C846.205153 512.425695 852.96716 429.890934 842.222445 333.193615zM533.475616 227.780797c17.334807 1.164522 35.811624 1.733481 55.478546 1.733481l105.755626 0c-1.166569 17.336854-1.734504 41.608653-1.734504 72.814376 0 30.068829 0.568958 53.745065 1.734504 71.080895L578.552254 373.409548l0 91.885733c-1.167592 17.336854 7.503904 26.00528 26.00528 26.00528l48.543599 0c9.236362 0 15.304568-4.036943 18.203594-12.136412 2.871397-8.072863 5.472642-23.107277 7.801686-45.076638 10.401908 6.933923 23.677259 12.136412 39.877219 15.604396-6.934946 28.90226-13.302981 47.974641-19.071358 57.211003-5.799076 9.266038-17.336854 13.870916-34.674731 13.870916l-83.21833 0c-24.269753 0-36.406165-13.274328-36.406165-39.875173l0-83.219353c0-16.171308-0.595564-34.078143-1.734504-53.743018l116.157533 0 0-88.420819c-67.045999 0-109.222587 0.596588-126.561487 1.735527L533.475616 227.780797 533.475616 227.780797zM717.246059 590.122265c-54.341652 0-99.414197-0.297782-135.227868-0.864694-35.83823-0.596588-66.748217-3.767813-92.753497-9.535167-26.00528-5.799076-47.106878-14.735609-63.279209-26.873044-16.19996-12.134365-31.206746-28.008914-45.075615-47.676859-11.567453 31.207769-23.133883 60.084447-34.673707 86.685291-9.263991-13.871939-18.502399-22.537296-27.738761-26.007327 9.236362-12.728906 16.46909-25.706475 21.670555-39.005362 5.201465-13.274328 9.535167-28.607548 13.001105-45.944402 3.467985-17.336854 6.936993-38.71065 10.402931-64.147996 10.401908 3.467985 23.676236 5.799076 39.876196 6.935969-13.871939 23.13286-15.603373 42.475394-5.201465 58.077743 10.399861 15.604396 19.639293 26.872021 27.738761 33.80799L425.985486 375.146099c-45.075615 0-75.142397 0.594541-90.150206 1.732457L335.83528 345.672834c15.007809 1.164522 42.74657 1.733481 83.217307 1.733481l0-67.614957c-25.436322 0-48.543599 0.595564-69.348438 1.735527l0-31.206746c15.007809 1.164522 38.141692 1.732457 69.348438 1.732457 0-21.941732-0.594541-42.747593-1.733481-62.412468l34.671661 0c-1.164522 20.803815-1.733481 41.60763-1.733481 62.412468 26.575262 0 46.214555-0.568958 58.94653-1.732457l0 31.206746c-12.731976-1.137916-32.373315-1.735527-58.94653-1.735527l0 67.614957c32.344662 0 57.780984-0.568958 76.28543-1.733481l0 31.206746c-18.504446-1.137916-41.609677-1.732457-69.350484-1.732457l0 55.478546c20.806885 0 42.177612-0.568958 64.149019-1.735527l0 31.206746c-20.805862-1.136893-42.206264-1.732457-64.149019-1.732457l0 74.54888c15.007809 12.729929 53.446259 20.208251 115.290793 22.537296 61.816904 2.302439 115.292839 0 160.369477-6.935969C725.916533 560.053436 720.71609 573.923328 717.246059 590.122265z',
    endPosition: 'M573.786717 234.453776c14.148231 34.752502 30.226418 61.781088 48.266283 81.087806 20.572548-21.871123 37.315884-48.89971 50.198286-81.087806L573.786717 234.453776 573.786717 234.453776zM843.794244 312.727491c-9.546424-85.915765-84.418668-177.534416-159.627581-218.9732-83.917248-46.24116-228.696656-51.163263-320.79012-0.511653-68.003813 37.401842-147.34586 108.9729-164.229388 234.833423-13.08604 97.549733 13.154601 191.397145 67.535139 256.3249 55.41817 66.175165 57.707306 61.989843 116.03269 123.380028 58.325383 61.396325 145.488559 220.432435 145.488559 220.432435s90.462315-167.07418 130.36921-211.585953 72.692602-71.117734 133.037992-150.646022C847.776951 491.959571 854.538959 409.42481 843.794244 312.727491zM355.623975 244.107647c14.146185-30.891568 25.732058-61.781088 34.751478-92.672656 15.445784 9.019421 28.959565 15.445784 40.543392 19.306718-7.723915 11.583826-18.040888 29.623691-30.891568 54.058197-12.881378 24.465205-27.693736 52.791343-44.405349 84.948741 8.987698 0 28.959565-1.26583 59.848063-3.859911 15.445784-24.434505 27.663036-47.603181 36.684504-69.502957 16.71059 11.582803 29.592992 19.306718 38.611389 23.167652-12.881378 16.742313-28.658713 39.276539-47.301306 67.573002-18.673292 28.326139-41.508369 61.147662-68.540026 98.463546 11.583826 0 40.543392-3.197832 86.878696-9.652847 0 12.880355 0.633427 24.464181 1.930979 34.751478-7.722892 1.297552-24.13263 3.226484-49.230238 5.79089-25.097608 2.594081-51.826366 7.090489-80.122829 13.514805-3.859911-11.582803-9.018398-25.097608-15.445784-40.542368 12.852726-3.860934 26.064632-14.781658 39.579437-32.821523 13.513782-18.009166 26.698059-38.612413 39.579437-61.781088-7.722892 0-18.673292 1.298576-32.821523 3.860934-14.176884 2.593058-26.39516 6.456039-36.682457 11.582803-5.158487-15.44476-11.583826-28.959565-19.305695-40.543392C326.000284 296.897967 341.446068 274.998191 355.623975 244.107647zM473.393215 535.635303c-23.168676 3.859911-47.964408 8.68787-74.330916 14.479783-26.396183 5.79089-49.895387 13.183254-70.467935 22.200628-2.594081-12.880355-7.722892-27.028587-15.445784-42.473347 38.612413-3.859911 92.672656-14.148231 162.173566-30.891568C474.026642 510.535649 473.393215 522.784624 473.393215 535.635303zM693.486936 591.624479c-34.751478-20.60427-64.374146-35.08303-88.809675-43.439348-24.464181-8.356318-50.860365-16.409738-79.156828-24.13263 7.722892-12.851703 13.514805-25.097608 17.375739-36.683481 84.948741 29.623691 140.936893 51.493791 167.966503 65.640999C705.705212 563.29834 699.911252 576.178695 693.486936 591.624479zM564.133869 444.894649c7.722892-11.583826 12.851703-23.801079 15.445784-36.682457 23.167652 9.018398 44.406372 17.073864 63.711044 24.131607 19.306718 7.090489 37.94931 14.479783 55.989175 22.202675-6.456039 9.019421-12.247952 20.603247-17.374716 34.751478-15.445784-7.721869-32.188096-15.113209-50.197262-22.202675C613.667006 460.038558 591.163479 452.617541 564.133869 444.894649zM734.029304 441.033715c-39.908942-19.305695-77.887928-45.037752-113.907283-77.225849-12.881378 11.583826-29.924543 24.13263-51.16224 37.647435s-44.7369 27.361161-70.467935 41.508369c-5.158487-12.850679-14.176884-23.800056-27.02961-32.819476 27.02961-8.989745 52.127218-20.271696 75.29487-33.786501 23.169699-13.514805 39.881312-25.399483 50.198286-35.716456-19.305695-24.434505-34.751478-50.197262-46.335305-77.225849-15.44476 27.02961-29.622668 49.563836-42.47437 67.573002-12.880355-10.287297-23.830755-17.375739-32.8205-21.237697 14.148231-15.44476 26.697035-31.855522 37.647435-49.230238 10.920724-17.375739 20.906146-35.716456 29.925566-55.024198 8.988722-19.305695 16.711614-40.544415 23.167652-63.711044 15.445784 9.019421 28.959565 15.44476 40.543392 19.306718-6.456039 7.721869-14.812357 21.900799-25.097608 42.47437L724.378503 203.566302c-11.583826 29.623691-22.8668 54.058197-33.787524 73.364915-10.949376 19.306718-26.064632 40.543392-45.370327 63.711044 16.712637 14.177907 36.683481 27.692712 59.849086 40.543392 23.168676 12.881378 41.810245 21.236674 55.989175 25.098631C749.476111 416.59921 740.45669 428.182013 734.029304 441.033715z',
    loadingopts: {
        lines: 13, // 花瓣数目
        length: 15, // 花瓣长度
        width: 5, // 花瓣宽度
        radius: 20, // 花瓣距中心半径
        corners: 1, // 花瓣圆滑度 (0-1)
        rotate: 0, // 花瓣旋转角度
        direction: 1, // 花瓣旋转方向 1: 顺时针, -1: 逆时针
        color: '#5882FA', // 花瓣颜色
        speed: 1, // 花瓣旋转速度
        trail: 60, // 花瓣旋转时的拖影(百分比)
        shadow: false, // 花瓣是否显示阴影
        hwaccel: false, //spinner 是否启用硬件加速及高速旋转            
        className: 'spinner', // spinner css 样式名称
        zIndex: 2e9, // spinner的z轴 (默认是2000000000)
        top: '50%', // spinner 相对父容器Top定位 单位 px
        left: '50%'// spinner 相对父容器Left定位 单位 px
    },   
    writeData: function (key, value) {
        if (window.localStorage) {
            localStorage.setItem(key, value);
        } else {
            Cookie.write(key, value);
        }
    },
    readData: function (key) {
        if (window.localStorage) {
            return localStorage.getItem(key);
        } else {
            return Cookie.read(key);
        }
    },
    removeData: function (key) {
        if (window.localStorage) {
            localStorage.removeItem(key);
        } else {
            Cookie.dispose(key);
        }
    },
    removeAlldata: function () {
        if (window.localStorage) {
            localStorage.clear();
        }
    },
    JSONtoObject: function (value) {
        return $.parseJSON(value);
    },
    ObjecttoJson: function (value) {
        return JSON.parse(value);
    },
    JSONtoString: function (value) {
        return JSON.stringify(value);
    },
    getLocation: function (affichePosition, erreurPosition) {
        if (navigator.geolocation) {
            var options = {
                enableHighAcuracy: true,
                timeout: 5000,
                maximumAge: 3000
            };
            navigator.geolocation.getCurrentPosition(affichePosition, erreurPosition, options);
        }
    },
    addDate: function (date, days) {
        var d = new Date(date);
        d.setDate(d.getDate() + days);
        var m = d.getMonth() + 1;
        return d.getFullYear() + '-' + XZY.PrefixInteger(m, 2) + '-' + XZY.PrefixInteger(d.getDate(), 2);
    },
    PrefixInteger: function (num, n) {
        return (Array(n).join(0) + num).slice(-n);
    },
    data_string: function (str) {
        var d = eval('new ' + str.substr(1, str.length - 2));
        var ar_date = [d.getFullYear(), d.getMonth() + 1, d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds()];
        for (var i = 0; i < ar_date.length; i++) ar_date[i] = dFormat(ar_date[i]);
        return ar_date.slice(0, 3).join('-') + ' ' + ar_date.slice(3).join(':');
        function dFormat(i) { return i < 10 ? "0" + i.toString() : i; }
    },
    //保存对象类型的数据到本地,传入的是对象类型
    SetSessionStorageObjectData:function (key,object) {

    sessionStorage.setItem(key, JSON.stringify(object));

    },
    //读取对象类型的数据，得到的是对象
    GetSessionStorageObjectData:function (key) {

    return JSON.parse(sessionStorage.getItem(key));

},
    init: function () {

    }
}
XZY.init();
/**
    * @param {String}  errorMessage   错误信息
    * @param {String}  scriptURI      出错的文件
    * @param {Long}    lineNumber     出错代码的行号
    * @param {Long}    columnNumber   出错代码的列号
    * @param {Object}  errorObj       错误的详细信息，Anything
    */
window.onerror = function (errorMessage, scriptURI, lineNumber, columnNumber, errorObj) {
    console.log("错误信息：", errorMessage);
    console.log("出错文件：", scriptURI);
    console.log("出错行号：", lineNumber);
    console.log("出错列号：", columnNumber);
    console.log("错误详情：", errorObj);
    // alert("错误信息：" + errorMessage + ";出错文件：" + scriptURI + ";出错行号：" + lineNumber + ";出错列号：" + columnNumber + ";错误详情：" + errorObj);
}
Date.prototype.Format = function (fmt) { //author: meizz
    var o = {
        "M+": this.getMonth() + 1,                 //月份
        "d+": this.getDate(),                    //日
        "h+": this.getHours(),                   //小时
        "m+": this.getMinutes(),                 //分
        "s+": this.getSeconds(),                 //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds()             //毫秒
    };
    fmt = fmt || "yyyy-MM-dd";
    if (/(y+)/.test(fmt))
        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt))
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}
function getLocalTime(nS) {
    return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\d{1,2}$/, ' ');
}


//// 对Date的扩展，将 Date 转化为指定格式的String
//// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符， 
//// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字) 
//// 例子： 
//// (new Date()).Format("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423 
//// (new Date()).Format("yyyy-M-d h:m:s.S")      ==> 2006-7-2 8:9:4.18 
//Date.prototype.Format = function (fmt) { //author: meizz 
//    var o = {
//        "M+": this.getMonth() + 1, //月份 
//        "d+": this.getDate(), //日 
//        "h+": this.getHours(), //小时 
//        "m+": this.getMinutes(), //分 
//        "s+": this.getSeconds(), //秒 
//        "q+": Math.floor((this.getMonth() + 3) / 3), //季度 
//        "S": this.getMilliseconds() //毫秒 
//    };
//    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
//    for (var k in o)
//        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
//    return fmt;
//}

function JsonToObject(value) {
    //json字符串转对象(接口传过来的)
    return JSON.parse(value);
}
